plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id "com.xebialabs.xldp" version "1.0.5"
    id 'nebula.release' version '15.2.0'
    id "com.xebialabs.xl.docker" version "1.1.0"
    id "com.github.hierynomus.jython" version "0.11.0"
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://dist.xebialabs.com/public/maven2'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks 'check'

dependencies {
    compile "com.xebialabs.overthere:overthere:5.0.22"
    compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    compile "org.dom4j:dom4j:2.1.3"
    compile "org.python:jython:2.5.3"
    testCompile "junit:junit:4.11"
}

sourceSets.main.resources.srcDirs = ["src/main/jython", "src/main/resources"]
sourceSets.test.resources.srcDirs = ["src/test/jython", "src/test/resources"]

task testJython(type: Exec, dependsOn: ['testClasses']) {
    environment = ["CLASSPATH": sourceSets.test.runtimeClasspath.asPath, "PATH": System.getenv("PATH"), "HOME": System.getenv("HOME")]
    commandLine jythonInterpreter, "$projectDir/src/test/jython/xlnoserunner/runtests.py", "$projectDir/src/test/jython/test_overtherepy", buildDir
    workingDir = projectDir
}

test.dependsOn testJython

license {
    header rootProject.file('License.md')
    strictCheck true
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'XEBIALABS'
    exclude('testfiles/*')
    exclude('directorycompare/*')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    if (project.hasProperty('sonatypeUsername')) {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            configuration = configurations.archives

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Overtherepy'
                description 'Jython wrapper for Overthere'
                packaging 'jar'
                url 'https://github.com/xebialabs-community/overthere-pylib'
                inceptionYear '2014'

                scm {
                    url 'https://github.com/xebialabs-community/overthere-pylib'
                }

                licenses {
                    license {
                        name 'GPLv2 with XebiaLabs FLOSS License Exception'
                        url 'https://github.com/xebialabs/overthere/blob/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'rnaidoo'
                        name 'Ravan Naidoo'
                        url 'http://www.xebialabs.com/'
                        email 'rnaidoo@xebialabs.com'
                        roles {
                            role 'Developer'
                        }
                    }
                    developer {
                        id 'bmoussaud'
                        name 'Benoit Moussaud'
                        url 'http://www.digital.ai/'
                        email 'bmoussaud@digital.ai'
                        roles {
                            role 'Developer'
                        }
                    }
                }
            }
        }
    }
}
